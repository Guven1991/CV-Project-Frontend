{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\projeler\\\\cv_frontend\\\\src\\\\pages\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { login } from \"../api/apiCalls\";\nimport { connect, useSelector } from \"react-redux\";\nimport { loginSuccess } from \"../redux/authActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = props => {\n  _s();\n\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [error, setError] = useState(); // state = {\n  //     username: null,\n  //     password: null,\n  //     error: null\n  // }\n  // const onChange = event => {\n  //     const {name, value} = event.target;\n  //     // this.setState({\n  //     //     [name]:value\n  //     // })\n  // }\n\n  const onClickLogin = async event => {\n    event.preventDefault();\n    const {\n      username,\n      password\n    } = this.state;\n    const creds = {\n      username: username,\n      password: password\n    };\n    const {\n      history\n    } = props;\n    const {\n      push\n    } = history;\n    this.setState({\n      error: null\n    });\n\n    try {\n      const response = await login(creds);\n      push('/');\n      const authState = { ...response.data,\n        password\n      };\n      this.props.onLoginSuccess(authState);\n    } catch (error) {// this.setState({\n      //     error: error.response.data.message\n      // });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          onChange: event => setUsername(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"password\",\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mt-1\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: onClickLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginPage, \"eksVDqXW9pIIuH/JhtZZFp066XE=\");\n\n_c = LoginPage;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLoginSuccess: authState => {\n      return dispatch(loginSuccess(authState));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(LoginPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["C:/workspace/projeler/cv_frontend/src/pages/LoginPage.js"],"names":["React","useState","login","connect","useSelector","loginSuccess","LoginPage","props","username","setUsername","password","setPassword","error","setError","onClickLogin","event","preventDefault","state","creds","history","push","setState","response","authState","data","onLoginSuccess","target","value","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {login} from \"../api/apiCalls\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {loginSuccess} from \"../redux/authActions\";\r\n\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const [username, setUsername] = useState();\r\n    const [password,setPassword] =useState();\r\n    const [error, setError] = useState();\r\n    // state = {\r\n    //     username: null,\r\n    //     password: null,\r\n    //     error: null\r\n    // }\r\n\r\n    // const onChange = event => {\r\n    //     const {name, value} = event.target;\r\n    //     // this.setState({\r\n    //     //     [name]:value\r\n    //     // })\r\n    // }\r\n\r\n    const onClickLogin =  async event => {\r\n\r\n        event.preventDefault();\r\n        const {username, password} = this.state;\r\n\r\n        const creds = {\r\n            username: username,\r\n            password: password\r\n        };\r\n\r\n        const {history} = props;\r\n        const {push} = history;\r\n\r\n        this.setState({\r\n            error:null\r\n        });\r\n        try{\r\n            const response = await login(creds);\r\n            push('/');\r\n\r\n            const authState = {\r\n                ...response.data,\r\n                password\r\n            }\r\n\r\n            this.props.onLoginSuccess(authState)\r\n        } catch (error){\r\n\r\n            // this.setState({\r\n            //     error: error.response.data.message\r\n            // });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form action=\"\">\r\n                <h1 className=\"text-center\">Login</h1>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\">Username</label>\r\n                    <input className=\"form-control\"  onChange={(event) => setUsername(event.target.value)}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\">Password</label>\r\n                    <input className=\"form-control\"  type=\"password\" onChange={event => setPassword(event.target.value)} />\r\n                </div>\r\n                <div className=\"text-center mt-1\">\r\n                    <button  className=\"btn btn-primary\" onClick={onClickLogin}>\r\n                        Login\r\n                    </button>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onLoginSuccess: (authState) => {\r\n            return dispatch(loginSuccess(authState))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginPage);"]},"metadata":{},"sourceType":"module"}