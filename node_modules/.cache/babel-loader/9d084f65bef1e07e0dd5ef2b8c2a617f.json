{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\projeler\\\\cv_frontend\\\\src\\\\components\\\\TopBar.js\";\nimport React, { Component } from 'react';\nimport logo from '../assets/cv.png';\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { logoutSuccess } from \"../redux/authActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TopBar extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.onClickLogout = () => {\n      this.props.dispatch(logoutSuccess());\n    };\n  }\n\n  render() {\n    const {\n      username,\n      isLoggedIn\n    } = this.props;\n\n    let links = /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"navbar-nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"nav-link \",\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"nav-link \",\n          to: \"/signup\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n\n    if (isLoggedIn) {\n      links = /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"navbar-nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"nav-link\",\n            to: `/user/${username}`,\n            children: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-link\",\n          onClick: this.onClickLogout,\n          style: {\n            cursor: 'pointer'\n          },\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shadow-sm mb-2\",\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar navbar-dark bg-dark navbar-expand\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            className: \"navbar-brand nav-item\",\n            to: \"/\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: logo,\n              width: \"60\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), \" CV Project\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), links]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    isLoggedIn: store.isLoggedIn,\n    username: store.username\n  };\n};\n\nexport default connect(mapStateToProps)(TopBar);","map":{"version":3,"sources":["C:/workspace/projeler/cv_frontend/src/components/TopBar.js"],"names":["React","Component","logo","Link","connect","logoutSuccess","TopBar","onClickLogout","props","dispatch","render","username","isLoggedIn","links","cursor","mapStateToProps","store"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAR,QAA4B,sBAA5B;;;AAEA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAE3BM,aAF2B,GAEX,MAAM;AAClB,WAAKC,KAAL,CAAWC,QAAX,CAAoBJ,aAAa,EAAjC;AACH,KAJ0B;AAAA;;AAM3BK,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,QAAD;AAAWC,MAAAA;AAAX,QAAyB,KAAKJ,KAApC;;AAEA,QAAIK,KAAK,gBACL;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,8BACI;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;;AAcA,QAAID,UAAJ,EAAgB;AACZC,MAAAA,KAAK,gBACD;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,gCACI;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,UAAhB;AAA2B,YAAA,EAAE,EAAG,SAAQF,QAAS,EAAjD;AAAA,sBACKA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAI,UAAA,SAAS,EAAC,UAAd;AAAyB,UAAA,OAAO,EAAE,KAAKJ,aAAvC;AAAsD,UAAA,KAAK,EAAE;AAACO,YAAAA,MAAM,EAAE;AAAT,WAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAWH;;AAED,wBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,0CAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,uBAAhB;AAAwC,YAAA,EAAE,EAAC,GAA3C;AAAA,oCACI;AAAK,cAAA,GAAG,EAAEZ,IAAV;AAAgB,cAAA,KAAK,EAAC,IAAtB;AAA2B,cAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,oBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAIKW,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AAlD0B;;AAqD/B,MAAME,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHJ,IAAAA,UAAU,EAAEI,KAAK,CAACJ,UADf;AAEHD,IAAAA,QAAQ,EAAEK,KAAK,CAACL;AAFb,GAAP;AAIH,CALD;;AAOA,eAAeP,OAAO,CAACW,eAAD,CAAP,CAAyBT,MAAzB,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport logo from '../assets/cv.png';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\nimport {logoutSuccess} from \"../redux/authActions\";\r\n\r\nclass TopBar extends Component {\r\n\r\n    onClickLogout = () => {\r\n        this.props.dispatch(logoutSuccess());\r\n    };\r\n\r\n    render() {\r\n        const {username, isLoggedIn} = this.props;\r\n\r\n        let links = (\r\n            <ul className=\"navbar-nav\">\r\n                <li>\r\n                    <Link className=\"nav-link \" to=\"/login\">\r\n                        Login\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link className=\"nav-link \" to=\"/signup\">\r\n                        Sign Up\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        );\r\n        if (isLoggedIn) {\r\n            links = (\r\n                <ul className=\"navbar-nav\">\r\n                    <li>\r\n                        <Link className=\"nav-link\" to={`/user/${username}`}>\r\n                            {username}\r\n                        </Link>\r\n\r\n                    </li>\r\n                    <li className=\"nav-link\" onClick={this.onClickLogout} style={{cursor: 'pointer'}}>Logout</li>\r\n                </ul>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"shadow-sm mb-2\">\r\n                <nav className=\"navbar navbar-dark bg-dark navbar-expand\">\r\n                    <div className=\"container-fluid\">\r\n                        <Link className=\"navbar-brand nav-item\" to=\"/\">\r\n                            <img src={logo} width=\"60\" alt=\"\"/> CV Project\r\n                        </Link>\r\n                        {links}\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n        isLoggedIn: store.isLoggedIn,\r\n        username: store.username\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopBar);"]},"metadata":{},"sourceType":"module"}