{"ast":null,"code":"import axios from 'axios';\nimport { setAuthorizationToken } from '../helpers/setAuthorizationToken';\n\nconst login = (username, password) => {\n  return axios.post(\"http://localhost:3000/account/login\", {\n    username,\n    password\n  }).then(user => {\n    //eğer kullanıcı bulunursa (user.data.status = true)\n    if (user.data.status) {\n      const {\n        token\n      } = user.data;\n      localStorage.setItem(\"jwtToken\", token);\n      setAuthorizationToken(token);\n    }\n\n    return user.data;\n  }).catch(err => console.log(err));\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"jwtToken\");\n  setAuthorizationToken(false);\n};\n\nexport default {\n  login,\n  logout\n};","map":{"version":3,"sources":["C:/workspace/projeler/cv_frontend/src/services/authService.js"],"names":["axios","setAuthorizationToken","login","username","password","post","then","user","data","status","token","localStorage","setItem","catch","err","console","log","logout","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,qBAAT,QAAsC,kCAAtC;;AAEA,MAAMC,KAAK,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAClC,SAAOJ,KAAK,CAACK,IAAN,CAAW,qCAAX,EAAkD;AAAEF,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAlD,EACFE,IADE,CACGC,IAAI,IAAI;AACV;AACA,QAAIA,IAAI,CAACC,IAAL,CAAUC,MAAd,EAAsB;AAClB,YAAM;AAAEC,QAAAA;AAAF,UAAYH,IAAI,CAACC,IAAvB;AACAG,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC;AACAT,MAAAA,qBAAqB,CAACS,KAAD,CAArB;AACH;;AACD,WAAOH,IAAI,CAACC,IAAZ;AACH,GATE,EAUFK,KAVE,CAUIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVX,CAAP;AAWH,CAZD;;AAcA,MAAMG,MAAM,GAAG,MAAM;AACjBN,EAAAA,YAAY,CAACO,UAAb,CAAwB,UAAxB;AACAjB,EAAAA,qBAAqB,CAAC,KAAD,CAArB;AACH,CAHD;;AAKA,eAAe;AAAEC,EAAAA,KAAF;AAASe,EAAAA;AAAT,CAAf","sourcesContent":["import axios from 'axios';\r\nimport { setAuthorizationToken } from '../helpers/setAuthorizationToken';\r\n\r\nconst login = (username, password) => {\r\n    return axios.post(\"http://localhost:3000/account/login\", { username, password })\r\n        .then(user => {\r\n            //eğer kullanıcı bulunursa (user.data.status = true)\r\n            if (user.data.status) {\r\n                const { token } = user.data;\r\n                localStorage.setItem(\"jwtToken\", token);\r\n                setAuthorizationToken(token);\r\n            }\r\n            return user.data;\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nconst logout = () => {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    setAuthorizationToken(false);\r\n}\r\n\r\nexport default { login, logout };"]},"metadata":{},"sourceType":"module"}